// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: internal/proto/twitchy.proto

package tutorialpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Format int32

const (
	Format_format_undefined Format = 0
	Format_mp4              Format = 1
	Format_avi              Format = 2
	Format_aac              Format = 3
)

// Enum value maps for Format.
var (
	Format_name = map[int32]string{
		0: "format_undefined",
		1: "mp4",
		2: "avi",
		3: "aac",
	}
	Format_value = map[string]int32{
		"format_undefined": 0,
		"mp4":              1,
		"avi":              2,
		"aac":              3,
	}
)

func (x Format) Enum() *Format {
	p := new(Format)
	*p = x
	return p
}

func (x Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_twitchy_proto_enumTypes[0].Descriptor()
}

func (Format) Type() protoreflect.EnumType {
	return &file_internal_proto_twitchy_proto_enumTypes[0]
}

func (x Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format.Descriptor instead.
func (Format) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{0}
}

type Resolution int32

const (
	Resolution_res_undefined Resolution = 0
	Resolution_x240p         Resolution = 1
	Resolution_x360p         Resolution = 2
	Resolution_x480p         Resolution = 3
	Resolution_x720p         Resolution = 4
	Resolution_x1080p        Resolution = 5
)

// Enum value maps for Resolution.
var (
	Resolution_name = map[int32]string{
		0: "res_undefined",
		1: "x240p",
		2: "x360p",
		3: "x480p",
		4: "x720p",
		5: "x1080p",
	}
	Resolution_value = map[string]int32{
		"res_undefined": 0,
		"x240p":         1,
		"x360p":         2,
		"x480p":         3,
		"x720p":         4,
		"x1080p":        5,
	}
)

func (x Resolution) Enum() *Resolution {
	p := new(Resolution)
	*p = x
	return p
}

func (x Resolution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Resolution) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_twitchy_proto_enumTypes[1].Descriptor()
}

func (Resolution) Type() protoreflect.EnumType {
	return &file_internal_proto_twitchy_proto_enumTypes[1]
}

func (x Resolution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Resolution.Descriptor instead.
func (Resolution) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{1}
}

type FPS int32

const (
	FPS_fps_undefined FPS = 0
	FPS_x5            FPS = 1
	FPS_x24           FPS = 2
	FPS_x30           FPS = 3
)

// Enum value maps for FPS.
var (
	FPS_name = map[int32]string{
		0: "fps_undefined",
		1: "x5",
		2: "x24",
		3: "x30",
	}
	FPS_value = map[string]int32{
		"fps_undefined": 0,
		"x5":            1,
		"x24":           2,
		"x30":           3,
	}
)

func (x FPS) Enum() *FPS {
	p := new(FPS)
	*p = x
	return p
}

func (x FPS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FPS) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_twitchy_proto_enumTypes[2].Descriptor()
}

func (FPS) Type() protoreflect.EnumType {
	return &file_internal_proto_twitchy_proto_enumTypes[2]
}

func (x FPS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FPS.Descriptor instead.
func (FPS) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{2}
}

type Error int32

const (
	Error_error_undefined     Error = 0
	Error_serverFull          Error = 1
	Error_serverInternalError Error = 2
	Error_qualityUnknown      Error = 3
)

// Enum value maps for Error.
var (
	Error_name = map[int32]string{
		0: "error_undefined",
		1: "serverFull",
		2: "serverInternalError",
		3: "qualityUnknown",
	}
	Error_value = map[string]int32{
		"error_undefined":     0,
		"serverFull":          1,
		"serverInternalError": 2,
		"qualityUnknown":      3,
	}
)

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}

func (x Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_twitchy_proto_enumTypes[3].Descriptor()
}

func (Error) Type() protoreflect.EnumType {
	return &file_internal_proto_twitchy_proto_enumTypes[3]
}

func (x Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error.Descriptor instead.
func (Error) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{3}
}

type LogLevel int32

const (
	LogLevel_debug LogLevel = 0
	LogLevel_info  LogLevel = 1
	LogLevel_warn  LogLevel = 2
	LogLevel_error LogLevel = 3
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "debug",
		1: "info",
		2: "warn",
		3: "error",
	}
	LogLevel_value = map[string]int32{
		"debug": 0,
		"info":  1,
		"warn":  2,
		"error": 3,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_twitchy_proto_enumTypes[4].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_internal_proto_twitchy_proto_enumTypes[4]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{4}
}

type StreamInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videoquality  *QualityDefinition     `protobuf:"bytes,1,opt,name=videoquality,proto3" json:"videoquality,omitempty"`
	Audioquality  *QualityDefinition     `protobuf:"bytes,2,opt,name=audioquality,proto3" json:"audioquality,omitempty"`
	StreamId      uint32                 `protobuf:"varint,3,opt,name=streamId,proto3" json:"streamId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamInfo) Reset() {
	*x = StreamInfo{}
	mi := &file_internal_proto_twitchy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInfo) ProtoMessage() {}

func (x *StreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_twitchy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInfo.ProtoReflect.Descriptor instead.
func (*StreamInfo) Descriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{0}
}

func (x *StreamInfo) GetVideoquality() *QualityDefinition {
	if x != nil {
		return x.Videoquality
	}
	return nil
}

func (x *StreamInfo) GetAudioquality() *QualityDefinition {
	if x != nil {
		return x.Audioquality
	}
	return nil
}

func (x *StreamInfo) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

type QualityDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Format        Format                 `protobuf:"varint,1,opt,name=format,proto3,enum=twitchy.Format" json:"format,omitempty"`
	Resolution    Resolution             `protobuf:"varint,2,opt,name=resolution,proto3,enum=twitchy.Resolution" json:"resolution,omitempty"`
	Fps           FPS                    `protobuf:"varint,3,opt,name=fps,proto3,enum=twitchy.FPS" json:"fps,omitempty"`
	Bitrate       int32                  `protobuf:"varint,4,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QualityDefinition) Reset() {
	*x = QualityDefinition{}
	mi := &file_internal_proto_twitchy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QualityDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityDefinition) ProtoMessage() {}

func (x *QualityDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_twitchy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityDefinition.ProtoReflect.Descriptor instead.
func (*QualityDefinition) Descriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{1}
}

func (x *QualityDefinition) GetFormat() Format {
	if x != nil {
		return x.Format
	}
	return Format_format_undefined
}

func (x *QualityDefinition) GetResolution() Resolution {
	if x != nil {
		return x.Resolution
	}
	return Resolution_res_undefined
}

func (x *QualityDefinition) GetFps() FPS {
	if x != nil {
		return x.Fps
	}
	return FPS_fps_undefined
}

func (x *QualityDefinition) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

type StreamValidation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      uint32                 `protobuf:"varint,1,opt,name=streamId,proto3" json:"streamId,omitempty"`
	Error         Error                  `protobuf:"varint,2,opt,name=error,proto3,enum=twitchy.Error" json:"error,omitempty"`
	Video         []*QualityDefinition   `protobuf:"bytes,3,rep,name=video,proto3" json:"video,omitempty"`
	Audio         []*QualityDefinition   `protobuf:"bytes,4,rep,name=audio,proto3" json:"audio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamValidation) Reset() {
	*x = StreamValidation{}
	mi := &file_internal_proto_twitchy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamValidation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamValidation) ProtoMessage() {}

func (x *StreamValidation) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_twitchy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamValidation.ProtoReflect.Descriptor instead.
func (*StreamValidation) Descriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{2}
}

func (x *StreamValidation) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *StreamValidation) GetError() Error {
	if x != nil {
		return x.Error
	}
	return Error_error_undefined
}

func (x *StreamValidation) GetVideo() []*QualityDefinition {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *StreamValidation) GetAudio() []*QualityDefinition {
	if x != nil {
		return x.Audio
	}
	return nil
}

type StreamData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            uint64                 `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	StreamId      uint32                 `protobuf:"varint,2,opt,name=streamId,proto3" json:"streamId,omitempty"`
	Audio         []byte                 `protobuf:"bytes,3,opt,name=audio,proto3" json:"audio,omitempty"`
	Video         []byte                 `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`
	StreamTitle   string                 `protobuf:"bytes,5,opt,name=streamTitle,proto3" json:"streamTitle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamData) Reset() {
	*x = StreamData{}
	mi := &file_internal_proto_twitchy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamData) ProtoMessage() {}

func (x *StreamData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_twitchy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamData.ProtoReflect.Descriptor instead.
func (*StreamData) Descriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{3}
}

func (x *StreamData) GetTs() uint64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *StreamData) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *StreamData) GetAudio() []byte {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *StreamData) GetVideo() []byte {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *StreamData) GetStreamTitle() string {
	if x != nil {
		return x.StreamTitle
	}
	return ""
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          uint32                 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Error         Error                  `protobuf:"varint,2,opt,name=error,proto3,enum=twitchy.Error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_internal_proto_twitchy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_twitchy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{4}
}

func (x *Ack) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Ack) GetError() Error {
	if x != nil {
		return x.Error
	}
	return Error_error_undefined
}

type LogsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         LogLevel               `protobuf:"varint,1,opt,name=level,proto3,enum=twitchy.LogLevel" json:"level,omitempty"`
	StreamId      []uint32               `protobuf:"varint,2,rep,packed,name=streamId,proto3" json:"streamId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogsInfo) Reset() {
	*x = LogsInfo{}
	mi := &file_internal_proto_twitchy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsInfo) ProtoMessage() {}

func (x *LogsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_twitchy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsInfo.ProtoReflect.Descriptor instead.
func (*LogsInfo) Descriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{5}
}

func (x *LogsInfo) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_debug
}

func (x *LogsInfo) GetStreamId() []uint32 {
	if x != nil {
		return x.StreamId
	}
	return nil
}

type LogData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      uint32                 `protobuf:"varint,1,opt,name=streamId,proto3" json:"streamId,omitempty"`
	Level         LogLevel               `protobuf:"varint,2,opt,name=level,proto3,enum=twitchy.LogLevel" json:"level,omitempty"`
	Ts            uint64                 `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Log           string                 `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogData) Reset() {
	*x = LogData{}
	mi := &file_internal_proto_twitchy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogData) ProtoMessage() {}

func (x *LogData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_twitchy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogData.ProtoReflect.Descriptor instead.
func (*LogData) Descriptor() ([]byte, []int) {
	return file_internal_proto_twitchy_proto_rawDescGZIP(), []int{6}
}

func (x *LogData) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *LogData) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_debug
}

func (x *LogData) GetTs() uint64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *LogData) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

var File_internal_proto_twitchy_proto protoreflect.FileDescriptor

const file_internal_proto_twitchy_proto_rawDesc = "" +
	"\n" +
	"\x1cinternal/proto/twitchy.proto\x12\atwitchy\"\xa8\x01\n" +
	"\n" +
	"StreamInfo\x12>\n" +
	"\fvideoquality\x18\x01 \x01(\v2\x1a.twitchy.QualityDefinitionR\fvideoquality\x12>\n" +
	"\faudioquality\x18\x02 \x01(\v2\x1a.twitchy.QualityDefinitionR\faudioquality\x12\x1a\n" +
	"\bstreamId\x18\x03 \x01(\rR\bstreamId\"\xab\x01\n" +
	"\x11QualityDefinition\x12'\n" +
	"\x06format\x18\x01 \x01(\x0e2\x0f.twitchy.FormatR\x06format\x123\n" +
	"\n" +
	"resolution\x18\x02 \x01(\x0e2\x13.twitchy.ResolutionR\n" +
	"resolution\x12\x1e\n" +
	"\x03fps\x18\x03 \x01(\x0e2\f.twitchy.FPSR\x03fps\x12\x18\n" +
	"\abitrate\x18\x04 \x01(\x05R\abitrate\"\xb8\x01\n" +
	"\x10StreamValidation\x12\x1a\n" +
	"\bstreamId\x18\x01 \x01(\rR\bstreamId\x12$\n" +
	"\x05error\x18\x02 \x01(\x0e2\x0e.twitchy.ErrorR\x05error\x120\n" +
	"\x05video\x18\x03 \x03(\v2\x1a.twitchy.QualityDefinitionR\x05video\x120\n" +
	"\x05audio\x18\x04 \x03(\v2\x1a.twitchy.QualityDefinitionR\x05audio\"\x86\x01\n" +
	"\n" +
	"StreamData\x12\x0e\n" +
	"\x02ts\x18\x01 \x01(\x04R\x02ts\x12\x1a\n" +
	"\bstreamId\x18\x02 \x01(\rR\bstreamId\x12\x14\n" +
	"\x05audio\x18\x03 \x01(\fR\x05audio\x12\x14\n" +
	"\x05video\x18\x04 \x01(\fR\x05video\x12 \n" +
	"\vstreamTitle\x18\x05 \x01(\tR\vstreamTitle\"?\n" +
	"\x03Ack\x12\x12\n" +
	"\x04size\x18\x01 \x01(\rR\x04size\x12$\n" +
	"\x05error\x18\x02 \x01(\x0e2\x0e.twitchy.ErrorR\x05error\"O\n" +
	"\bLogsInfo\x12'\n" +
	"\x05level\x18\x01 \x01(\x0e2\x11.twitchy.LogLevelR\x05level\x12\x1a\n" +
	"\bstreamId\x18\x02 \x03(\rR\bstreamId\"p\n" +
	"\aLogData\x12\x1a\n" +
	"\bstreamId\x18\x01 \x01(\rR\bstreamId\x12'\n" +
	"\x05level\x18\x02 \x01(\x0e2\x11.twitchy.LogLevelR\x05level\x12\x0e\n" +
	"\x02ts\x18\x03 \x01(\x04R\x02ts\x12\x10\n" +
	"\x03log\x18\x04 \x01(\tR\x03log*9\n" +
	"\x06Format\x12\x14\n" +
	"\x10format_undefined\x10\x00\x12\a\n" +
	"\x03mp4\x10\x01\x12\a\n" +
	"\x03avi\x10\x02\x12\a\n" +
	"\x03aac\x10\x03*W\n" +
	"\n" +
	"Resolution\x12\x11\n" +
	"\rres_undefined\x10\x00\x12\t\n" +
	"\x05x240p\x10\x01\x12\t\n" +
	"\x05x360p\x10\x02\x12\t\n" +
	"\x05x480p\x10\x03\x12\t\n" +
	"\x05x720p\x10\x04\x12\n" +
	"\n" +
	"\x06x1080p\x10\x05*2\n" +
	"\x03FPS\x12\x11\n" +
	"\rfps_undefined\x10\x00\x12\x06\n" +
	"\x02x5\x10\x01\x12\a\n" +
	"\x03x24\x10\x02\x12\a\n" +
	"\x03x30\x10\x03*Y\n" +
	"\x05Error\x12\x13\n" +
	"\x0ferror_undefined\x10\x00\x12\x0e\n" +
	"\n" +
	"serverFull\x10\x01\x12\x17\n" +
	"\x13serverInternalError\x10\x02\x12\x12\n" +
	"\x0equalityUnknown\x10\x03*4\n" +
	"\bLogLevel\x12\t\n" +
	"\x05debug\x10\x00\x12\b\n" +
	"\x04info\x10\x01\x12\b\n" +
	"\x04warn\x10\x02\x12\t\n" +
	"\x05error\x10\x032\xaa\x02\n" +
	"\aTwitchy\x12=\n" +
	"\tNewStream\x12\x13.twitchy.StreamInfo\x1a\x19.twitchy.StreamValidation\"\x00\x125\n" +
	"\n" +
	"SendStream\x12\x13.twitchy.StreamData\x1a\f.twitchy.Ack\"\x00(\x010\x01\x12:\n" +
	"\n" +
	"ListStream\x12\x13.twitchy.StreamInfo\x1a\x13.twitchy.StreamInfo\"\x000\x01\x129\n" +
	"\tGetStream\x12\x13.twitchy.StreamInfo\x1a\x13.twitchy.StreamData\"\x000\x01\x122\n" +
	"\aGetLogs\x12\x11.twitchy.LogsInfo\x1a\x10.twitchy.LogData\"\x000\x01B<Z:github.com/protocolbuffers/protobuf/examples/go/tutorialpbb\x06proto3"

var (
	file_internal_proto_twitchy_proto_rawDescOnce sync.Once
	file_internal_proto_twitchy_proto_rawDescData []byte
)

func file_internal_proto_twitchy_proto_rawDescGZIP() []byte {
	file_internal_proto_twitchy_proto_rawDescOnce.Do(func() {
		file_internal_proto_twitchy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_proto_twitchy_proto_rawDesc), len(file_internal_proto_twitchy_proto_rawDesc)))
	})
	return file_internal_proto_twitchy_proto_rawDescData
}

var file_internal_proto_twitchy_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_internal_proto_twitchy_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_internal_proto_twitchy_proto_goTypes = []any{
	(Format)(0),               // 0: twitchy.Format
	(Resolution)(0),           // 1: twitchy.Resolution
	(FPS)(0),                  // 2: twitchy.FPS
	(Error)(0),                // 3: twitchy.Error
	(LogLevel)(0),             // 4: twitchy.LogLevel
	(*StreamInfo)(nil),        // 5: twitchy.StreamInfo
	(*QualityDefinition)(nil), // 6: twitchy.QualityDefinition
	(*StreamValidation)(nil),  // 7: twitchy.StreamValidation
	(*StreamData)(nil),        // 8: twitchy.StreamData
	(*Ack)(nil),               // 9: twitchy.Ack
	(*LogsInfo)(nil),          // 10: twitchy.LogsInfo
	(*LogData)(nil),           // 11: twitchy.LogData
}
var file_internal_proto_twitchy_proto_depIdxs = []int32{
	6,  // 0: twitchy.StreamInfo.videoquality:type_name -> twitchy.QualityDefinition
	6,  // 1: twitchy.StreamInfo.audioquality:type_name -> twitchy.QualityDefinition
	0,  // 2: twitchy.QualityDefinition.format:type_name -> twitchy.Format
	1,  // 3: twitchy.QualityDefinition.resolution:type_name -> twitchy.Resolution
	2,  // 4: twitchy.QualityDefinition.fps:type_name -> twitchy.FPS
	3,  // 5: twitchy.StreamValidation.error:type_name -> twitchy.Error
	6,  // 6: twitchy.StreamValidation.video:type_name -> twitchy.QualityDefinition
	6,  // 7: twitchy.StreamValidation.audio:type_name -> twitchy.QualityDefinition
	3,  // 8: twitchy.Ack.error:type_name -> twitchy.Error
	4,  // 9: twitchy.LogsInfo.level:type_name -> twitchy.LogLevel
	4,  // 10: twitchy.LogData.level:type_name -> twitchy.LogLevel
	5,  // 11: twitchy.Twitchy.NewStream:input_type -> twitchy.StreamInfo
	8,  // 12: twitchy.Twitchy.SendStream:input_type -> twitchy.StreamData
	5,  // 13: twitchy.Twitchy.ListStream:input_type -> twitchy.StreamInfo
	5,  // 14: twitchy.Twitchy.GetStream:input_type -> twitchy.StreamInfo
	10, // 15: twitchy.Twitchy.GetLogs:input_type -> twitchy.LogsInfo
	7,  // 16: twitchy.Twitchy.NewStream:output_type -> twitchy.StreamValidation
	9,  // 17: twitchy.Twitchy.SendStream:output_type -> twitchy.Ack
	5,  // 18: twitchy.Twitchy.ListStream:output_type -> twitchy.StreamInfo
	8,  // 19: twitchy.Twitchy.GetStream:output_type -> twitchy.StreamData
	11, // 20: twitchy.Twitchy.GetLogs:output_type -> twitchy.LogData
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_internal_proto_twitchy_proto_init() }
func file_internal_proto_twitchy_proto_init() {
	if File_internal_proto_twitchy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_proto_twitchy_proto_rawDesc), len(file_internal_proto_twitchy_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_proto_twitchy_proto_goTypes,
		DependencyIndexes: file_internal_proto_twitchy_proto_depIdxs,
		EnumInfos:         file_internal_proto_twitchy_proto_enumTypes,
		MessageInfos:      file_internal_proto_twitchy_proto_msgTypes,
	}.Build()
	File_internal_proto_twitchy_proto = out.File
	file_internal_proto_twitchy_proto_goTypes = nil
	file_internal_proto_twitchy_proto_depIdxs = nil
}
